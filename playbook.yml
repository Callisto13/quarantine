---
- hosts: all
  vars:
    downloads_dir: /tmp/downloads
  tasks:
  - name: add apt repositories
    become: yes
    become_method: sudo
    apt_repository: repo={{ item }}
    with_items:
    - ppa:git-core/ppa
    - ppa:neovim-ppa/stable

  - name: install apt packages
    become: yes
    become_method: sudo
    apt: name={{ item }} state=latest update_cache=yes
    with_items:
    - build-essential
    - curl
    - debootstrap
    - direnv
    - exuberant-ctags
    - git
    - htop
    - libcap-dev
    - libncurses5-dev
    - libseccomp-dev
    - neovim
    - python-dev
    - python-pip
    - python3-dev
    - python3-pip
    - silversearcher-ag
    - tree
    - wget
    - zsh
    # For tmux
    - libevent-dev

  - name: install neovim pip package
    pip: name=neovim executable=/usr/bin/pip

  - name: install neovim pip3 package
    pip: name=neovim executable=/usr/bin/pip3

  - name: clone oh my zsh
    git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=~/.oh-my-zsh

  - name: set zsh as default shell
    become: yes
    become_method: sudo
    user: name={{ansible_env.USER}} shell=/bin/zsh

  - name: copy zshrc
    copy: src=config/zshrc dest=~/.zshrc mode=0600 force=yes

  - name: copy git config
    copy: src=config/gitconfig dest=~/.gitconfig mode=0600 force=yes

  - name: ensure downloads directory exists
    file: path={{downloads_dir}} state=directory

  - name: download tmux
    get_url: url=https://github.com/tmux/tmux/releases/download/2.5/tmux-2.5.tar.gz dest={{downloads_dir}}/tmux-2.5.tar.gz

  - name: extract tmux
    unarchive: copy=no src={{downloads_dir}}/tmux-2.5.tar.gz dest={{downloads_dir}} creates={{downloads_dir}}/tmux-2.5

  - name: check tmux installed
    command: tmux -V
    register: tmux_version
    failed_when: tmux_version.rc != 0 and tmux_version.rc != 127

  - name: configure tmux
    command: ./configure chdir={{downloads_dir}}/tmux-2.5
    when: tmux_version.stdout != "tmux 2.5"

  - name: compile tmux
    make: chdir={{downloads_dir}}/tmux-2.5
    when: tmux_version.stdout != "tmux 2.5"

  - name: install tmux
    become: yes
    become_method: sudo
    make: target=install chdir={{downloads_dir}}/tmux-2.5
    when: tmux_version.stdout != "tmux 2.5"

  - name: copy tmux.conf
    copy: src=config/tmux.conf dest=~/.tmux.conf mode=0600 force=yes

  - name: get TPM
    git:
      repo: https://github.com/tmux-plugins/tpm
      dest: ~/.tmux/plugins/tpm

  - name: download go
    get_url: url=https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz dest={{downloads_dir}}/go.tar.gz

  - name: extract go
    become: yes
    become_method: sudo
    unarchive: copy=no src={{downloads_dir}}/go.tar.gz dest=/usr/local creates=/usr/local/go

  - name: clone vim config
    git: repo=https://github.com/luan/vimfiles dest=~/.vim

  - name: check kernel version
    command: uname -r
    register: kernel_version

  - name: fancy new kernel
    become: yes
    become_method: sudo
    apt: deb={{item}}
    with_items:
    - http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.12-rc7/linux-headers-4.12.0-041200rc7_4.12.0-041200rc7.201706252231_all.deb
    - http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.12-rc7/linux-headers-4.12.0-041200rc7-generic_4.12.0-041200rc7.201706252231_amd64.deb
    - http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.12-rc7/linux-image-4.12.0-041200rc7-generic_4.12.0-041200rc7.201706252231_amd64.deb
    when: kernel_version.stdout != "4.12.0-041200rc7-generic"
