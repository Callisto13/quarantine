---
- hosts: all
  vars:
    downloads_dir: /tmp/downloads
  tasks:
  - name: add apt repositories
    become: true
    become_method: sudo
    apt_repository: repo={{ item }}
    with_items:
    - ppa:git-core/ppa

  - name: install apt packages
    become: true
    become_method: sudo
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - automake
      - autotools-dev
      - build-essential
      - curl
      - debootstrap
      - direnv
      - exuberant-ctags
      - git
      - htop
      - libcap-dev
      - libncurses5-dev
      - libseccomp-dev
      - libtool
      - neovim
      - pkg-config
      - python-dev
      - python-pip
      - python3-dev
      - python3-pip
      - shellcheck
      - silversearcher-ag
      - tmux
      - tree
      - util-linux
      - valgrind
      - vim-nox
      - wget
      - btrfs-progs
      - libbtrfs-dev
      - direnv
      - ripgrep

  - name: install neovim pip package
    pip: name=neovim executable=/usr/bin/pip

  - name: install neovim pip3 package
    pip: name=neovim executable=/usr/bin/pip3

  - name: ensure downloads directory exists
    file: path={{downloads_dir}} state=directory

  - name: copy config files
    copy: src={{item.src}} dest={{item.dst}} mode=0664 force=true
    with_items:
    - {src: config/tmux.conf, dst: ~/.tmux.conf}
    - {src: config/gitconfig, dst: ~/.gitconfig}
    - {src: config/vimrc.local.plugins, dst: ~/.vimrc.local.plugins}
    - {src: config/vimrc, dst: ~/.vimrc}
    - {src: config/bash_aliases, dst: ~/.bash_aliases}

  - name: copy systemwide config files
    become: true
    become_method: sudo
    copy: src={{item.src}} dest={{item.dst}} mode=0664 force=true
    with_items:
    - {src: config/golang.sh, dst: /etc/profile.d/golang.sh}

  - name: get TPM
    git:
      repo: https://github.com/tmux-plugins/tpm
      dest: ~/.tmux/plugins/tpm

  - name: download go
    get_url: url=https://dl.google.com/go/go1.14.linux-amd64.tar.gz dest={{downloads_dir}}/go.tar.gz

  - name: extract go
    become: true
    become_method: sudo
    unarchive: copy=no src={{downloads_dir}}/go.tar.gz dest=/usr/local creates=/usr/local/go

  - name: clone vim config
    git:
      repo: https://github.com/masters-of-cats/a-new-hope
      dest: ~/.config/nvim
      force: yes

  - name: add custom vim plugins
    lineinfile:
      path: ~/.config/nvim/init.vim
      insertafter: 'plugged'
      line: 'silent source ~/.vimrc.local.plugins'

  - name: add custom vim config
    lineinfile:
      path: ~/.config/nvim/init.vim
      insertafter: EOF
      line: 'silent source ~/.vimrc'

  - name: remove stupid vim mappings
    lineinfile:
      path: ~/.config/nvim/init.vim
      state: absent
      regexp: ';;'

  - name: install vim plugins and binaries
    command: nvim --headless +PlugInstall +PlugUpdate +GoUpdateBinaries +qall

  - name: update remote plugins
    command: nvim --headless +UpdateRemotePlugins +qall

  - name: install docker
    shell: curl -sSL https://get.docker.com/ | sh
    args:
      warn: no

  - name: change docker socket owner
    file:
      path: /var/run/docker.sock
      owner: vagrant
      group: vagrant

  - name: get kind
    command: /usr/local/go/bin/go get sigs.k8s.io/kind

  - name: get kubectl
    become: true
    become_method: sudo
    command: curl -L https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl
    args:
      warn: no

  - name: chmod kubectl
    become: true
    become_method: sudo
    file:
      path: /usr/local/bin/kubectl
      mode: 0755

